{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Desktop\\\\BatStateU-Alumni-Web-Portal\\\\front_end\\\\src\\\\signup\\\\SignupForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { PersonalDetails } from \"./PersonalDetails\"; //holds different section of forms(personal, alumni backgorund, set up account) on which each renders on the screen sequentially\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = () => {\n  _s();\n\n  const [personalDetails, setPersonalDetails] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    gender: \"\",\n    phone: \"\",\n    cellphone: \"\"\n  });\n  const [alumniDetails, setAlumniDetails] = useState({\n    fullname: \"\",\n    srCode: \"\",\n    degree: \"\",\n    batch: \"\",\n    gsuite: \"\",\n    schoolEmail: \"\"\n  }); //used in transitioning form inputs from alumnidetails towards the rest\n\n  const [status, setStatus] = useState({\n    step1Status: false,\n    step2Status: false,\n    step3Status: false\n  }); //filtering out the required inputs in forms\n\n  const {\n    phone,\n    ...requiredPersonalDetails\n  } = personalDetails;\n  const {\n    schoolEmail,\n    ...requiredAlumniDetails\n  } = alumniDetails;\n  const isPersonalDetailsComplete = Object.values(requiredPersonalDetails).includes(\"\") ? false : true;\n  const isAlumniDetailsComplete = Object.values(requiredAlumniDetails).includes(\"\") ? false : true;\n  console.log(\"result 1: \", isPersonalDetailsComplete);\n  console.log(\"result 2: \", isAlumniDetailsComplete); //changes the status state to toggle between different input groups\n\n  const evalFormStatus = e => {\n    e.preventDefault();\n    setStatus(isAlumniDetailsComplete && status === false || isPersonalDetailsComplete && status === true ? !status : status);\n    console.log(status);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"lg:w-100 py-10 px-7 bg-white flex flex-col gap-2 font-poppins\",\n    children: [/*#__PURE__*/_jsxDEV(PersonalDetails, {\n      personalDetails: personalDetails,\n      setPersonalDetails: setPersonalDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-full mt-3 py-2 bg-red text-center text-white rounded\",\n      onClick: evalFormStatus,\n      children: !isPersonalDetailsComplete ? \"Proceed to Alumni Details\" : isPersonalDetailsComplete ? \"Proceed to Account Details\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignupForm, \"nFQRJvqQwNn8pMn2zxQ9pbH379o=\");\n\n_c = SignupForm;\nexport { SignupForm };\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["useState","PersonalDetails","SignupForm","personalDetails","setPersonalDetails","firstname","lastname","gender","phone","cellphone","alumniDetails","setAlumniDetails","fullname","srCode","degree","batch","gsuite","schoolEmail","status","setStatus","step1Status","step2Status","step3Status","requiredPersonalDetails","requiredAlumniDetails","isPersonalDetailsComplete","Object","values","includes","isAlumniDetailsComplete","console","log","evalFormStatus","e","preventDefault"],"sources":["C:/Users/mathe/Desktop/BatStateU-Alumni-Web-Portal/front_end/src/signup/SignupForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { PersonalDetails } from \"./PersonalDetails\";\r\n//holds different section of forms(personal, alumni backgorund, set up account) on which each renders on the screen sequentially\r\n\r\nconst SignupForm = () => {\r\n    const [personalDetails, setPersonalDetails] = useState({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        gender: \"\",\r\n        phone: \"\",\r\n        cellphone: \"\",\r\n    });\r\n\r\n    const [alumniDetails, setAlumniDetails] = useState({\r\n        fullname: \"\",\r\n        srCode: \"\",\r\n        degree: \"\",\r\n        batch: \"\",\r\n        gsuite: \"\",\r\n        schoolEmail: \"\",\r\n    });\r\n\r\n    //used in transitioning form inputs from alumnidetails towards the rest\r\n    const [status, setStatus] = useState({\r\n        step1Status: false,\r\n        step2Status: false,\r\n        step3Status: false,\r\n    });\r\n\r\n    //filtering out the required inputs in forms\r\n    const { phone, ...requiredPersonalDetails } = personalDetails;\r\n    const { schoolEmail, ...requiredAlumniDetails } = alumniDetails;\r\n\r\n    const isPersonalDetailsComplete = Object.values(\r\n        requiredPersonalDetails\r\n    ).includes(\"\")\r\n        ? false\r\n        : true;\r\n    const isAlumniDetailsComplete = Object.values(\r\n        requiredAlumniDetails\r\n    ).includes(\"\")\r\n        ? false\r\n        : true;\r\n\r\n    console.log(\"result 1: \", isPersonalDetailsComplete);\r\n    console.log(\"result 2: \", isAlumniDetailsComplete);\r\n\r\n    //changes the status state to toggle between different input groups\r\n    const evalFormStatus = (e) => {\r\n        e.preventDefault();\r\n        setStatus(\r\n            (isAlumniDetailsComplete && status === false) ||\r\n                (isPersonalDetailsComplete && status === true)\r\n                ? !status\r\n                : status\r\n        );\r\n        console.log(status);\r\n    };\r\n\r\n    return (\r\n        <form className=\"lg:w-100 py-10 px-7 bg-white flex flex-col gap-2 font-poppins\">\r\n            <PersonalDetails\r\n                personalDetails={personalDetails}\r\n                setPersonalDetails={setPersonalDetails}\r\n            />\r\n            <button\r\n                className=\"w-full mt-3 py-2 bg-red text-center text-white rounded\"\r\n                onClick={evalFormStatus}\r\n            >\r\n                {!isPersonalDetailsComplete\r\n                    ? \"Proceed to Alumni Details\"\r\n                    : isPersonalDetailsComplete\r\n                    ? \"Proceed to Account Details\"\r\n                    : \"Sign Up\"}\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport { SignupForm };\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,mBAAhC,C,CACA;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC;IACnDK,SAAS,EAAE,EADwC;IAEnDC,QAAQ,EAAE,EAFyC;IAGnDC,MAAM,EAAE,EAH2C;IAInDC,KAAK,EAAE,EAJ4C;IAKnDC,SAAS,EAAE;EALwC,CAAD,CAAtD;EAQA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC;IAC/CY,QAAQ,EAAE,EADqC;IAE/CC,MAAM,EAAE,EAFuC;IAG/CC,MAAM,EAAE,EAHuC;IAI/CC,KAAK,EAAE,EAJwC;IAK/CC,MAAM,EAAE,EALuC;IAM/CC,WAAW,EAAE;EANkC,CAAD,CAAlD,CATqB,CAkBrB;;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC;IACjCoB,WAAW,EAAE,KADoB;IAEjCC,WAAW,EAAE,KAFoB;IAGjCC,WAAW,EAAE;EAHoB,CAAD,CAApC,CAnBqB,CAyBrB;;EACA,MAAM;IAAEd,KAAF;IAAS,GAAGe;EAAZ,IAAwCpB,eAA9C;EACA,MAAM;IAAEc,WAAF;IAAe,GAAGO;EAAlB,IAA4Cd,aAAlD;EAEA,MAAMe,yBAAyB,GAAGC,MAAM,CAACC,MAAP,CAC9BJ,uBAD8B,EAEhCK,QAFgC,CAEvB,EAFuB,IAG5B,KAH4B,GAI5B,IAJN;EAKA,MAAMC,uBAAuB,GAAGH,MAAM,CAACC,MAAP,CAC5BH,qBAD4B,EAE9BI,QAF8B,CAErB,EAFqB,IAG1B,KAH0B,GAI1B,IAJN;EAMAE,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,yBAA1B;EACAK,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,uBAA1B,EAzCqB,CA2CrB;;EACA,MAAMG,cAAc,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;IACAf,SAAS,CACJU,uBAAuB,IAAIX,MAAM,KAAK,KAAvC,IACKO,yBAAyB,IAAIP,MAAM,KAAK,IAD7C,GAEM,CAACA,MAFP,GAGMA,MAJD,CAAT;IAMAY,OAAO,CAACC,GAAR,CAAYb,MAAZ;EACH,CATD;;EAWA,oBACI;IAAM,SAAS,EAAC,+DAAhB;IAAA,wBACI,QAAC,eAAD;MACI,eAAe,EAAEf,eADrB;MAEI,kBAAkB,EAAEC;IAFxB;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MACI,SAAS,EAAC,wDADd;MAEI,OAAO,EAAE4B,cAFb;MAAA,UAIK,CAACP,yBAAD,GACK,2BADL,GAEKA,yBAAyB,GACzB,4BADyB,GAEzB;IARV;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH,CAzED;;GAAMvB,U;;KAAAA,U;AA2EN,SAASA,UAAT"},"metadata":{},"sourceType":"module"}