{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\Desktop\\\\BatStateU-Alumni-Web-Portal\\\\front_end\\\\src\\\\profile\\\\edit_form\\\\TextInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TextInput = _ref => {\n  _s();\n\n  let {\n    value,\n    handleChange,\n    label,\n    type\n  } = _ref;\n  const [readOnlyInput, setReadOnlyInput] = useState(true);\n  const [inputActive, setInputActive] = useState(false); // const [inputActive, setInputActive] = useState(false);\n\n  const textInputRef = useRef(null); // useEffect(() => {\n  //     if (textInputRef.current !== document.activeElement) {\n  //         console.log(\"hey\");\n  //         // setReadOnlyInput(true);\n  //     }\n  // }, []);\n\n  if (textInputRef.current !== document.activeElement) {\n    console.log(\"input not active\"); //add onClick event on modal for resetting the active input into readonly when user decides to click everywhere after filing up the input text\n  }\n\n  const handleEditInput = () => {\n    setReadOnlyInput(!readOnlyInput);\n    setInputActive(!inputActive);\n    textInputRef.current.focus();\n    console.log(readOnlyInput);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full text-454545 flex flex-col text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        className: \"w-full p-1.5 text-xs border rounded border-grey-200\",\n        onChange: handleChange,\n        value: value,\n        readOnly: readOnlyInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TextInput, \"XX8Jg3HIupE5MK+kRqSNupLq+64=\");\n\n_c = TextInput;\nexport { TextInput };\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["useState","useRef","TextInput","value","handleChange","label","type","readOnlyInput","setReadOnlyInput","inputActive","setInputActive","textInputRef","current","document","activeElement","console","log","handleEditInput","focus"],"sources":["C:/Users/mathe/Desktop/BatStateU-Alumni-Web-Portal/front_end/src/profile/edit_form/TextInput.js"],"sourcesContent":["import { useState, useRef } from \"react\";\r\n\r\nconst TextInput = ({ value, handleChange, label, type }) => {\r\n    const [readOnlyInput, setReadOnlyInput] = useState(true);\r\n    const [inputActive, setInputActive] = useState(false);\r\n\r\n    // const [inputActive, setInputActive] = useState(false);\r\n\r\n    const textInputRef = useRef(null);\r\n    // useEffect(() => {\r\n    //     if (textInputRef.current !== document.activeElement) {\r\n    //         console.log(\"hey\");\r\n    //         // setReadOnlyInput(true);\r\n    //     }\r\n    // }, []);\r\n    if (textInputRef.current !== document.activeElement) {\r\n        console.log(\"input not active\");\r\n        //add onClick event on modal for resetting the active input into readonly when user decides to click everywhere after filing up the input text\r\n    }\r\n\r\n    const handleEditInput = () => {\r\n        setReadOnlyInput(!readOnlyInput);\r\n        setInputActive(!inputActive);\r\n        textInputRef.current.focus();\r\n        console.log(readOnlyInput);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"w-full text-454545 flex flex-col text-sm\">\r\n                <label>{label}</label>\r\n                <input\r\n                    type={type}\r\n                    className=\"w-full p-1.5 text-xs border rounded border-grey-200\"\r\n                    onChange={handleChange}\r\n                    value={value}\r\n                    readOnly={readOnlyInput}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { TextInput };\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;;AAEA,MAAMC,SAAS,GAAG,QAA0C;EAAA;;EAAA,IAAzC;IAAEC,KAAF;IAASC,YAAT;IAAuBC,KAAvB;IAA8BC;EAA9B,CAAyC;EACxD,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C,CAFwD,CAIxD;;EAEA,MAAMW,YAAY,GAAGV,MAAM,CAAC,IAAD,CAA3B,CANwD,CAOxD;EACA;EACA;EACA;EACA;EACA;;EACA,IAAIU,YAAY,CAACC,OAAb,KAAyBC,QAAQ,CAACC,aAAtC,EAAqD;IACjDC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EADiD,CAEjD;EACH;;EAED,MAAMC,eAAe,GAAG,MAAM;IAC1BT,gBAAgB,CAAC,CAACD,aAAF,CAAhB;IACAG,cAAc,CAAC,CAACD,WAAF,CAAd;IACAE,YAAY,CAACC,OAAb,CAAqBM,KAArB;IACAH,OAAO,CAACC,GAAR,CAAYT,aAAZ;EACH,CALD;;EAOA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,0CAAf;MAAA,wBACI;QAAA,UAAQF;MAAR;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,IAAI,EAAEC,IADV;QAEI,SAAS,EAAC,qDAFd;QAGI,QAAQ,EAAEF,YAHd;QAII,KAAK,EAAED,KAJX;QAKI,QAAQ,EAAEI;MALd;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAcH,CAvCD;;GAAML,S;;KAAAA,S;AAyCN,SAASA,SAAT"},"metadata":{},"sourceType":"module"}